"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

$.mlpFnName = function (fn) {
  return fn.name || (fn + '').split(/\s|\(/)[1];
};

$.mlpInit = function (fn, name, set) {
  if (typeof set == "undefined") {
    set = true;
  }
  window.MLP = window.MLP || {};
  window.MLP.apps = window.MLP.apps || {};
  window.MLP.instances = window.MLP.instances || {};
  window.MLP.config = window.MLP.config || {};
  if (fn && set) {
    name = name || $.mlpFnName(fn);
    window.MLP.apps[name] = fn;
  } else {
    return window.MLP.apps[fn];
  }
};

/***
@fn (obj) - the JS object class
@name (str) - the name of the class
@bypass (bool) - whether or not the module can be instantiated multiple times
@elModule (bool) - whether to create an element based module $(...).ModuleName 
or regular JQuery method $.MethodName
@returnContext (bool) - whether to return an object with class context 
and the element which instantiated the module (@elModule must be true)
**/

$.mlpModule = function (fn, name, bypass, elModule, returnContext) {
  var obj;
  if (typeof bypass == "undefined") {
    bypass = false;
  }
  if (typeof elModule == "undefined") {
    elModule = true;
  }
  if (typeof returnContext == "undefined") {
    returnContext = true;
  }
  obj = {};
  $.mlpInit(fn, name);
  name = name || $.mlpFnName(fn);
  obj[name] = function () {
    var args,
        option,
        _el,
        _this = [],
        result;
    option = arguments[0];
    args = 2 <= arguments.length ? Array.prototype.slice.call(arguments, 1) : [];
    _el = $(this).each(function () {
      var $this, data, key;
      $this = $(this);
      key = 'mlp-' + name;
      data = $this.data(key);
      if (!data || bypass) {
        $this.data('name', name);
        $this.data(key, data = new fn(option, this));
      }
      if (typeof option === 'string') {
        return data[option].apply(data, args);
      }
      _this.push(data);
    });
    result = returnContext ? { mlp: _this, el: _el } : null;
    return result;
  };
  if (elModule) {
    $.fn.extend(obj);
  } else {
    obj[name] = function (option) {
      return new fn(option);
    };
    $.extend(obj);
  }
};

var MLPModule = function () {
  _createClass(MLPModule, [{
    key: "defaults",
    value: function defaults() {
      this.defaults = {};
    }
  }]);

  function MLPModule(options, element) {
    _classCallCheck(this, MLPModule);

    this.ops = $.extend({}, this.defaults, options);
    this.sel = this.sel || {};
    this.el = this.el || {};
    this.el.target = $(element);
    this.init();
    return this;
  }

  _createClass(MLPModule, [{
    key: "init",
    value: function init() {
      this.classes = {
        active: 'is-active',
        offscreen: 'l-offscreen',
        ghost: 'l-ghost'
      };

      this.keys = {
        esc: 27,
        down: 40,
        up: 38,
        left: 37,
        right: 39,
        o: 79,
        space: 32,
        tab: 9,
        enter: 13
      };

      this.aria = {
        expanded: 'aria-expanded',
        hidden: 'aria-hidden',
        controls: 'aria-controls',
        selected: 'aria-selected',
        invalid: 'aria-invalid',
        pressed: 'aria-pressed',
        described: 'aria-describedby',
        checked: 'aria-checked',
        label: 'aria-label',
        labelled: 'aria-labelledby',
        popup: 'aria-haspopup'
      };

      this.attr = {
        tabindex: 'tabindex'
      };
    }
  }, {
    key: "stop",
    value: function stop(e) {
      e.preventDefault();
      return e.stopPropagation();
    }
  }, {
    key: "target",
    value: function target(e) {
      return $(e.target);
    }
  }, {
    key: "currentTarget",
    value: function currentTarget(e) {
      return $(e.currentTarget);
    }
  }, {
    key: "isRight",
    value: function isRight(e) {
      return this.keycode(e) === this.keys.right;
    }
  }, {
    key: "isLeft",
    value: function isLeft(e) {
      return this.keycode(e) === this.keys.left;
    }
  }, {
    key: "isUp",
    value: function isUp(e) {
      return this.keycode(e) === this.keys.up;
    }
  }, {
    key: "isDown",
    value: function isDown(e) {
      return this.keycode(e) === this.keys.down;
    }
  }, {
    key: "isEnter",
    value: function isEnter(e) {
      return this.keycode(e) === this.keys.enter;
    }
  }, {
    key: "isSpace",
    value: function isSpace(e) {
      return this.keycode(e) === this.keys.space;
    }
  }, {
    key: "isTab",
    value: function isTab(e) {
      return this.keycode(e) === this.keys.tab;
    }
  }, {
    key: "isBackTab",
    value: function isBackTab(e) {
      return e.shiftKey && this.isTab(e);
    }
  }, {
    key: "isEsc",
    value: function isEsc(e) {
      return this.keycode(e) === this.keys.esc;
    }
  }, {
    key: "isEnterOrSpace",
    value: function isEnterOrSpace(e) {
      return this.isEnter(e) || this.isSpace(e);
    }
  }, {
    key: "keycode",
    value: function keycode(e) {
      return e.which;
    }
  }, {
    key: "isIE",
    value: function isIE(version) {
      if (typeof version == "undefined") {
        version = 9;
      }
      return bowser.msie && bowser.version === version;
    }
  }]);

  return MLPModule;
}();

$.mlpInit(MLPModule, 'MLPModule');
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Carousel = function (_MLP$apps$MLPModule) {
  _inherits(Carousel, _MLP$apps$MLPModule);

  function Carousel() {
    _classCallCheck(this, Carousel);

    return _possibleConstructorReturn(this, (Carousel.__proto__ || Object.getPrototypeOf(Carousel)).apply(this, arguments));
  }

  _createClass(Carousel, [{
    key: 'defaults',
    value: function defaults() {
      this.defaults = {
        property: 'foo'
      };
    }
  }, {
    key: 'init',
    value: function init() {
      var _this2 = this;

      this.el = {
        btnPrev: $('.btn-prev'),
        btnNext: $('.btn-next'),
        slice: $('.slice'),
        topCarousel: $('.top-carousel'),
        dot: $('.dot'),
        homepageCarousel: $('.homepage-carousel'),
        homepage: $('.homepage')
      };
      this.sel = {
        acount: 0,
        animation: false
      };
      this.len = this.el.slice.length - 1;
      _get(Carousel.prototype.__proto__ || Object.getPrototypeOf(Carousel.prototype), 'init', this).call(this);
      this.events();
      this.setCarousel();
      this.animTime;
      this.autoTimer = null;
      this.timer = null;
      this.isMobile = true;
      this.runAgain = null;
      this.runAgain = setTimeout(function () {
        _this2.autoRun();
      }, 2000);

      this.checkMobile();
      this.mobileTouchEvents();
      /*$(window).resize(() => {
        clearTimeout(this.timer);
        this.timer = null;
        this.timer = setTimeout(function(){
          this.setCarousel();
        }, 100);
         clearTimeout(this.animTime);
        this.animTime = null;
        console.log('go on');
      });*/
      $(window).resize(function () {
        _this2.setCarousel();
        console.log('go on');
      });
    }
  }, {
    key: 'setCarousel',
    value: function setCarousel() {
      var deviceWidth = $('body').width();
      var parent = deviceWidth * this.el.slice.length;
      this.el.topCarousel.css({ 'width': parent + 'px', 'left': -parseInt(deviceWidth * this.len) + 'px' });
      this.el.slice.css('width', deviceWidth + 'px');
    }
  }, {
    key: 'events',
    value: function events() {
      this.btnPrevEvents();
      this.btnNextEvents();
    }
  }, {
    key: 'checkMobile',
    value: function checkMobile() {
      if (typeof window.ontouchstart === "undefined") {
        this.isMobile = false;
      }
    }
  }, {
    key: 'btnPrevEvents',
    value: function btnPrevEvents() {
      var _this3 = this;

      this.el.btnPrev.on('click', function () {
        if (!_this3.sel.animation) {
          _this3.sel.animation = true;
          _this3.sel.acount--;
          _this3.animate();
        }
        /*if(_this.sel.acount===0){
          _this.el.topCarousel.css({'left':'-'+parseInt(deviceWidth * (_this.el.slice.length-1))+'px'},500);
          _this.sel.acount = _this.el.slice.length-1;
        }
        _this.sel.acount--;
        _this.el.topCarousel.animate({'left':"-"+ _this.sel.acount*deviceWidth +'px'},500);*/
        _this3.el.dot.removeClass('active');
        _this3.el.dot.eq(_this3.sel.acount).addClass('active');
      });
    }
  }, {
    key: 'btnNextEvents',
    value: function btnNextEvents() {
      var _this4 = this;

      this.el.btnNext.on('click', function () {
        if (!_this4.sel.animation) {
          _this4.sel.animation = true;
          _this4.sel.acount++;
          _this4.animate();
        }

        /* if(_this.sel.acount===_this.el.slice.length-1){
           _this.el.topCarousel.css({'left':0});
           _this.sel.acount = 0;
         }
         _this.sel.acount++;
         _this.el.topCarousel.animate({'left':"-"+ _this.sel.acount*deviceWidth +"px"},500);*/

        _this4.el.dot.removeClass('active');
        _this4.el.dot.eq(_this4.sel.acount === 3 ? 0 : _this4.sel.acount).addClass('active');
      });
    }
  }, {
    key: 'autoRun',
    value: function autoRun() {
      var _this5 = this;

      clearTimeout(this.animTime);
      this.animTime = null;
      this.sel.acount++;
      this.animate();
      this.animTime = setTimeout(function () {
        _this5.autoRun();
      }, 5000);
      this.el.dot.removeClass('active');
      this.el.dot.eq(this.sel.acount === 3 ? 0 : this.sel.acount).addClass('active');
    }
  }, {
    key: 'animate',
    value: function animate(callback) {
      var _this6 = this;

      var deviceWidth = $('body').width();
      if (this.sel.acount > this.el.slice.length - 1) {
        this.el.topCarousel.css('left', 0);
        this.sel.acount = 1;
      }

      if (this.sel.acount < 0) {
        this.el.topCarousel.css('left', -parseInt(deviceWidth * this.len) + 'px');
        this.sel.acount = this.len - 1;
      }

      this.el.topCarousel.animate({ 'left': -parseInt(deviceWidth * this.sel.acount) + 'px' }, 500, function () {
        _this6.sel.animation = false;
        if (typeof callback === "function") {
          callback();
        }
      });
    }
  }, {
    key: 'autoPlay',
    value: function autoPlay() {
      var _this7 = this;

      this.animTime = setTimeout(function () {
        if (!_this7.sel.animation) {
          _this7.sel.animation = true;
          _this7.sel.acount++;
          _this7.animate();
        }
        _this7.el.dot.removeClass('active');
        _this7.el.dot.eq(_this7.sel.acount === 3 ? 0 : _this7.sel.acount).addClass('active');
      }, 5000);
    }
  }, {
    key: 'mobileTouchEvents',
    value: function mobileTouchEvents() {
      var _this8 = this;

      var startX = 0;
      var firstX = 0;
      if (!this.isMobile) {
        this.el.homepageCarousel.on('mouseover', function () {
          clearTimeout(_this8.animTime);
          _this8.animTime = null;
          clearTimeout(_this8.runAgain);
          _this8.runAgain = null;
        });

        this.el.homepageCarousel.on('mouseout', function () {
          clearTimeout(_this8.runAgain);
          _this8.runAgain = null;
          _this8.runAgain = setTimeout(function () {
            _this8.autoRun();
          }, 5000);
        });
      } else {
        this.el.homepageCarousel.on('touchstart', function (e) {
          clearTimeout(_this8.animTime);
          _this8.animTime = null;
          clearTimeout(_this8.runAgain);
          _this8.runAgain = null;
          startX = e.originalEvent.changedTouches[0].clientX;
          firstX = startX;
          _this8.el.topCarousel.stop(true, true);
        });

        this.el.homepageCarousel.on('touchmove', function (e) {
          var nowX = e.originalEvent.changedTouches[0].clientX;
          var moveX = nowX - startX;
          var currentLeft = parseFloat(_this8.el.topCarousel.css("left"));
          var left = currentLeft + moveX;
          if (left >= -(_this8.el.slice.width() * _this8.len) && left <= 0) {
            _this8.el.topCarousel.css('left', left + "px");
            startX = nowX;
          }
        });

        this.el.homepageCarousel.on('touchend', function (e) {
          var nowX = e.originalEvent.changedTouches[0].clientX;
          var move = nowX - firstX;
          if (move > 0) {
            _this8.sel.acount -= 1;
            _this8.animate(function () {
              _this8.runAgain = null;
              _this8.runAgain = setTimeout(function () {
                _this8.autoRun();
              }, 2000);
            });
            _this8.el.dot.removeClass('active');
            _this8.el.dot.eq(_this8.sel.acount === 3 ? 0 : _this8.sel.acount).addClass('active');
          } else {
            _this8.sel.acount += 1;
            _this8.animate(function () {
              _this8.runAgain = null;
              _this8.runAgain = setTimeout(function () {
                _this8.autoRun();
              }, 2000);
            });
            _this8.el.dot.removeClass('active');
            _this8.el.dot.eq(_this8.sel.acount === 3 ? 0 : _this8.sel.acount).addClass('active');
          }
        });
      }
    }
  }]);

  return Carousel;
}(MLP.apps.MLPModule);

$.mlpModule(Carousel, 'Carousel');
'use strict';

/*
  Every plugin/module initialization goes here.
 */
$(document).ready(function () {
  $('[data-js-language-global]').Slide();
  $('[data-js-carousel]').Carousel();
});
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Slide = function (_MLP$apps$MLPModule) {
  _inherits(Slide, _MLP$apps$MLPModule);

  function Slide() {
    _classCallCheck(this, Slide);

    return _possibleConstructorReturn(this, (Slide.__proto__ || Object.getPrototypeOf(Slide)).apply(this, arguments));
  }

  _createClass(Slide, [{
    key: 'defaults',
    value: function defaults() {
      this.defaults = {
        property: 'foo'
      };
    }
  }, {
    key: 'init',
    value: function init() {
      this.el = {
        languageGlobal: $('#language-global'),
        languageDiv: $('#language-div'),
        langClose: $('.lang-close'),
        dropDown: $('.drop-down'),
        arrowDown: $('.arrow-down'),
        sidebarDisplay: $('.sidebar-display'),
        navbarMobile: $('.navbar-mobile'),
        sidebarSearch: $('.sidebar-search'),
        form: $('.form'),
        searchText: $('.SearchText'),
        dropDownMobile: $('.drop-down-mobile'),
        navMenuMobile: $('.nav-menu-mobile'),
        catalent: $('.catalent'),
        homepage: $('.homepage')
      };
      this.sel = {
        sideActive: "side-active",
        active: "active-l-80",
        activedb: "active-d-b",
        sidebarSearchChangebg: "sidebar-search-changebg"
      };
      _get(Slide.prototype.__proto__ || Object.getPrototypeOf(Slide.prototype), 'init', this).call(this);
      this.events();
    }
  }, {
    key: 'events',
    value: function events() {
      this.languageEvents();
      this.dropDownEvents();
      this.bodyEvents();
      this.navbarEvents();
    }
  }, {
    key: 'languageEvents',
    value: function languageEvents() {
      var _this3 = this;

      this.el.languageGlobal.click(function () {
        return _this3.el.languageDiv.toggle(500);
      });
      this.el.langClose.click(function () {
        return _this3.el.languageDiv.hide(500);
      });
    }
  }, {
    key: 'dropDownEvents',
    value: function dropDownEvents() {
      var _this = this;
      this.el.arrowDown.click(function () {
        $(this).next().show(500);
        $(this).parent().siblings().find(_this.el.dropDown).hide(500);
      });
    }
  }, {
    key: 'bodyEvents',
    value: function bodyEvents() {
      var dropDown = $('.drop-down');
      $('body').on('click', function (e) {
        var target = $(e.target);
        var dropDownEle = target.closest('.drop-down');
        var arrowDown = target.closest('.arrow-down');
        if (!dropDownEle.length && !arrowDown.length) {
          dropDown.hide(500);
        }
      });
    }
  }, {
    key: 'navbarEvents',
    value: function navbarEvents() {
      var _this4 = this;

      var _this = this;
      this.el.sidebarDisplay.on("click", function () {
        _this4.el.catalent.toggleClass(_this4.sel.sideActive);
        _this4.el.navbarMobile.toggleClass(_this4.sel.active);
        _this4.el.homepage.toggleClass(_this4.sel.active);
      });

      this.el.sidebarSearch.on("click", function () {
        $(_this4).toggleClass(_this4.sel.sidebarSearchChangebg);
        _this4.el.form.toggleClass(_this4.sel.activedb);
        _this4.el.searchText.focus();
      });

      $('.nav-menu-mobile a').each(function () {
        var _this5 = this;

        if ($(this).next(_this.el.dropDownMobile).length) {
          $(this).on('click', function (e) {
            e.stopPropagation();
            e.preventDefault();
            $(_this5).next(_this.el.dropDownMobile).toggle(300);
          });
        }
      });
    }
  }]);

  return Slide;
}(MLP.apps.MLPModule);

$.mlpModule(Slide, 'Slide');